# Choregraphe bezier export in Python.
# BIG or anything that similar to BIG

names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[-0.00430945, [3, -0.0133333, 0], [3, 0.08, 0]], [0.0590658, [3, -0.08, 0], [3, 0.266667, 0]], [-0.125664, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.125664, [3, -0.186667, -8.32238e-09], [3, 0.12, 5.3501e-09]], [-0.00430945, [3, -0.12, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0, [3, -0.0133333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.266667, 0]], [-0.003585, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.00358499, [3, -0.186667, -2.08059e-09], [3, 0.12, 1.33752e-09]], [0, [3, -0.12, 0], [3, 0, 0]]])

# names.append("LAnklePitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[0.09, [3, -0.0133333, 0], [3, 0.08, 0]], [0.09, [3, -0.08, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.186667, 0]], [0.09, [3, -0.186667, 0], [3, 0.12, 0]], [0.09, [3, -0.12, 0], [3, 0, 0]]])

# names.append("LAnkleRoll")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[-0.13, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.13, [3, -0.08, 0], [3, 0.266667, 0]], [-0.13, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.13, [3, -0.186667, 0], [3, 0.12, 0]], [-0.13, [3, -0.12, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[-0.421502, [3, -0.0133333, 0], [3, 0.08, 0]], [-1.44815, [3, -0.08, 0], [3, 0.266667, 0]], [-1.38233, [3, -0.266667, -3.80452e-07], [3, 0.186667, 2.66316e-07]], [-1.38233, [3, -0.186667, -2.66316e-07], [3, 0.12, 1.71203e-07]], [-0.421502, [3, -0.12, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[-1.21118, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.833179, [3, -0.08, 0], [3, 0.266667, 0]], [-1.54094, [3, -0.266667, 5.70677e-07], [3, 0.186667, -3.99474e-07]], [-1.54094, [3, -0.186667, 0], [3, 0.12, 0]], [-1.21118, [3, -0.12, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0.3, [3, -0.0133333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.266667, 0]], [0.990117, [3, -0.266667, 0], [3, 0.186667, 0]], [0.990117, [3, -0.186667, 1.78814e-07], [3, 0.12, -1.14952e-07]], [0.3, [3, -0.12, 0], [3, 0, 0]]])

# names.append("LHipPitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.08, 0]], [0.13, [3, -0.08, 0], [3, 0.266667, 0]], [0.13, [3, -0.266667, 0], [3, 0.186667, 0]], [0.13, [3, -0.186667, 0], [3, 0.12, 0]], [0.13, [3, -0.12, 0], [3, 0, 0]]])

# names.append("LHipRoll")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[0.1, [3, -0.0133333, 0], [3, 0.08, 0]], [0.1, [3, -0.08, 0], [3, 0.266667, 0]], [0.1, [3, -0.266667, 0], [3, 0.186667, 0]], [0.1, [3, -0.186667, 0], [3, 0.12, 0]], [0.1, [3, -0.12, 0], [3, 0, 0]]])

# names.append("LHipYawPitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[-0.17, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.17, [3, -0.08, 0], [3, 0.266667, 0]], [-0.17, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.17, [3, -0.186667, 0], [3, 0.12, 0]], [-0.17, [3, -0.12, 0], [3, 0, 0]]])

# names.append("LKneePitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[-0.09, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.09, [3, -0.08, 0], [3, 0.266667, 0]], [-0.09, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.09, [3, -0.186667, 0], [3, 0.12, 0]], [-0.09, [3, -0.12, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[1.41789, [3, -0.0133333, 0], [3, 0.08, 0]], [1.01901, [3, -0.08, 0], [3, 0.266667, 0]], [1.02081, [3, -0.266667, 0], [3, 0.186667, 0]], [1.02081, [3, -0.186667, 0], [3, 0.12, 0]], [1.41789, [3, -0.12, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0.246231, [3, -0.0133333, 0], [3, 0.08, 0]], [0.106118, [3, -0.08, 0], [3, 0.266667, 0]], [0.226334, [3, -0.266667, 0], [3, 0.186667, 0]], [0.226334, [3, -0.186667, 0], [3, 0.12, 0]], [0.246231, [3, -0.12, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0.0993094, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.725057, [3, -0.08, 0], [3, 0.266667, 0]], [-0.463736, [3, -0.266667, -4.75564e-07], [3, 0.186667, 3.32895e-07]], [-0.463736, [3, -0.186667, -3.32895e-07], [3, 0.12, 2.14004e-07]], [0.0993094, [3, -0.12, 0], [3, 0, 0]]])

# names.append("RAnklePitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[0.09, [3, -0.0133333, 0], [3, 0.08, 0]], [0.09, [3, -0.08, 0], [3, 0.266667, 0]], [0.09, [3, -0.266667, 0], [3, 0.186667, 0]], [0.09, [3, -0.186667, 0], [3, 0.12, 0]], [0.09, [3, -0.12, 0], [3, 0, 0]]])

# names.append("RAnkleRoll")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.08, 0]], [0.13, [3, -0.08, 0], [3, 0.266667, 0]], [0.13, [3, -0.266667, 0], [3, 0.186667, 0]], [0.13, [3, -0.186667, 0], [3, 0.12, 0]], [0.13, [3, -0.12, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0.430973, [3, -0.0133333, 0], [3, 0.08, 0]], [1.52537, [3, -0.08, 0], [3, 0.266667, 0]], [1.29918, [3, -0.266667, 0], [3, 0.186667, 0]], [1.29918, [3, -0.186667, 0], [3, 0.12, 0]], [0.430973, [3, -0.12, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[1.213, [3, -0.0133333, 0], [3, 0.08, 0]], [0.775997, [3, -0.08, 0], [3, 0.266667, 0]], [1.38651, [3, -0.266667, 0], [3, 0.186667, 0]], [1.38651, [3, -0.186667, 6.6579e-07], [3, 0.12, -4.28008e-07]], [1.213, [3, -0.12, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0.3, [3, -0.0133333, 0], [3, 0.08, 0]], [0, [3, -0.08, 0], [3, 0.266667, 0]], [0.994475, [3, -0.266667, -8.51495e-08], [3, 0.186667, 5.96047e-08]], [0.994475, [3, -0.186667, 0], [3, 0.12, 0]], [0.3, [3, -0.12, 0], [3, 0, 0]]])

# names.append("RHipPitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.08, 0]], [0.13, [3, -0.08, 0], [3, 0.266667, 0]], [0.13, [3, -0.266667, 0], [3, 0.186667, 0]], [0.13, [3, -0.186667, 0], [3, 0.12, 0]], [0.13, [3, -0.12, 0], [3, 0, 0]]])

# names.append("RHipRoll")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[-0.1, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.1, [3, -0.08, 0], [3, 0.266667, 0]], [-0.1, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.1, [3, -0.186667, 0], [3, 0.12, 0]], [-0.1, [3, -0.12, 0], [3, 0, 0]]])

# names.append("RHipYawPitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[-0.17, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.17, [3, -0.08, 0], [3, 0.266667, 0]], [-0.17, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.17, [3, -0.186667, 0], [3, 0.12, 0]], [-0.17, [3, -0.12, 0], [3, 0, 0]]])

# names.append("RKneePitch")
# times.append([0.04, 0.28, 1.08, 1.64, 2])
# keys.append([[-0.09, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.09, [3, -0.08, 0], [3, 0.266667, 0]], [-0.09, [3, -0.266667, 0], [3, 0.186667, 0]], [-0.09, [3, -0.186667, 0], [3, 0.12, 0]], [-0.09, [3, -0.12, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[1.42331, [3, -0.0133333, 0], [3, 0.08, 0]], [1.0243, [3, -0.08, 0.0350138], [3, 0.266667, -0.116713]], [0.907586, [3, -0.266667, 6.6579e-07], [3, 0.186667, -4.66053e-07]], [0.907585, [3, -0.186667, 0], [3, 0.12, 0]], [1.42331, [3, -0.12, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[-0.245094, [3, -0.0133333, 0], [3, 0.08, 0]], [-0.0852918, [3, -0.08, 0], [3, 0.266667, 0]], [-0.269589, [3, -0.266667, 4.0423e-07], [3, 0.186667, -2.82961e-07]], [-0.269589, [3, -0.186667, 0], [3, 0.12, 0]], [-0.245094, [3, -0.12, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.04, 0.28, 1.08, 1.64, 2])
keys.append([[0.10819, [3, -0.0133333, 0], [3, 0.08, 0]], [0.794746, [3, -0.08, 0], [3, 0.266667, 0]], [0.529771, [3, -0.266667, 6.18234e-07], [3, 0.186667, -4.32764e-07]], [0.52977, [3, -0.186667, 4.32764e-07], [3, 0.12, -2.78205e-07]], [0.10819, [3, -0.12, 0], [3, 0, 0]]])


