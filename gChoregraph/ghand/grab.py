# Choregraphe bezier export in Python.
# REACH AND GRAB/CATCH or anything like that

names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[-0.00430945, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.00365021, [3, -0.0933333, -0.000548878], [3, 0.16, 0.000940934]], [0.00459114, [3, -0.16, 0], [3, 0.12, 0]], [0.00459114, [3, -0.12, 0], [3, 0.0933333, 0]], [0.00459114, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.225147, [3, -0.106667, 0], [3, 0.146667, 0]], [0.225147, [3, -0.146667, 0], [3, 0.2, 0]], [0.225147, [3, -0.2, 0], [3, 0.0666667, 0]], [0.0558505, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.003585, [3, -0.0933333, 0], [3, 0.16, 0]], [0, [3, -0.16, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.106667, 0]], [0, [3, -0.106667, 0], [3, 0.146667, 0]], [0, [3, -0.146667, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0.0666667, 0]], [0, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("LAnklePitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[0.09, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.09, [3, -0.0933333, 0], [3, 0.16, 0]], [0.09, [3, -0.16, 0], [3, 0.12, 0]], [0.09, [3, -0.12, 0], [3, 0.0933333, 0]], [0.09, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.09, [3, -0.106667, 0], [3, 0.146667, 0]], [0.09, [3, -0.146667, 0], [3, 0.2, 0]], [0.09, [3, -0.2, 0], [3, 0.0666667, 0]], [0.09, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("LAnkleRoll")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[-0.13, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.13, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.13, [3, -0.16, 0], [3, 0.12, 0]], [-0.13, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.13, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.13, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.13, [3, -0.146667, 0], [3, 0.2, 0]], [-0.13, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.13, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[-0.421502, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-1.22648, [3, -0.0933333, 0.00290196], [3, 0.16, -0.00497478]], [-1.23146, [3, -0.16, 1.77544e-07], [3, 0.12, -1.33158e-07]], [-1.23146, [3, -0.12, 0], [3, 0.0933333, 0]], [-1.23146, [3, -0.0933333, 0], [3, 0.106667, 0]], [-1.23146, [3, -0.106667, 0], [3, 0.146667, 0]], [-1.23146, [3, -0.146667, 0], [3, 0.2, 0]], [-1.23146, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.421502, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[-1.21118, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.652709, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.729169, [3, -0.16, 0], [3, 0.12, 0]], [-0.729169, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.729169, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.729169, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.729169, [3, -0.146667, 0], [3, 0.2, 0]], [-0.729169, [3, -0.2, 0], [3, 0.0666667, 0]], [-1.21118, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0.3, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.41, [3, -0.0933333, 0], [3, 0.16, 0]], [0.403038, [3, -0.16, 5.16574e-07], [3, 0.12, -3.8743e-07]], [0.403038, [3, -0.12, 0], [3, 0.0933333, 0]], [0.403038, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.403038, [3, -0.106667, 0], [3, 0.146667, 0]], [0.403038, [3, -0.146667, 0], [3, 0.2, 0]], [0.403038, [3, -0.2, 0], [3, 0.0666667, 0]], [0.3, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("LHipPitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.13, [3, -0.0933333, 0], [3, 0.16, 0]], [0.13, [3, -0.16, 0], [3, 0.12, 0]], [0.13, [3, -0.12, 0], [3, 0.0933333, 0]], [0.13, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.13, [3, -0.106667, 0], [3, 0.146667, 0]], [0.13, [3, -0.146667, 0], [3, 0.2, 0]], [0.13, [3, -0.2, 0], [3, 0.0666667, 0]], [0.13, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("LHipRoll")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[0.1, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.1, [3, -0.0933333, 0], [3, 0.16, 0]], [0.1, [3, -0.16, 0], [3, 0.12, 0]], [0.1, [3, -0.12, 0], [3, 0.0933333, 0]], [0.1, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.1, [3, -0.106667, 0], [3, 0.146667, 0]], [0.1, [3, -0.146667, 0], [3, 0.2, 0]], [0.1, [3, -0.2, 0], [3, 0.0666667, 0]], [0.1, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("LHipYawPitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[-0.17, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.17, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.17, [3, -0.16, 0], [3, 0.12, 0]], [-0.17, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.17, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.17, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.17, [3, -0.146667, 0], [3, 0.2, 0]], [-0.17, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.17, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("LKneePitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[-0.09, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.09, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.09, [3, -0.16, 0], [3, 0.12, 0]], [-0.09, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.09, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.09, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.09, [3, -0.146667, 0], [3, 0.2, 0]], [-0.09, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[1.41789, [3, -0.0133333, 0], [3, 0.0933333, 0]], [1.64261, [3, -0.0933333, 0], [3, 0.16, 0]], [1.52948, [3, -0.16, 0], [3, 0.12, 0]], [1.52948, [3, -0.12, 0], [3, 0.0933333, 0]], [1.52948, [3, -0.0933333, 0], [3, 0.106667, 0]], [1.52948, [3, -0.106667, 0], [3, 0.146667, 0]], [1.52948, [3, -0.146667, 0], [3, 0.2, 0]], [1.52948, [3, -0.2, 0], [3, 0.0666667, 0]], [1.41789, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0.246231, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.074804, [3, -0.0933333, 0], [3, 0.16, 0]], [0.162594, [3, -0.16, -4.4386e-08], [3, 0.12, 3.32895e-08]], [0.162594, [3, -0.12, 0], [3, 0.0933333, 0]], [0.162594, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.162594, [3, -0.106667, 0], [3, 0.146667, 0]], [0.162594, [3, -0.146667, 0], [3, 0.2, 0]], [0.162594, [3, -0.2, 0], [3, 0.0666667, 0]], [0.246231, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0.0993094, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.128411, [3, -0.0933333, 0], [3, 0.16, 0]], [0.118885, [3, -0.16, 0], [3, 0.12, 0]], [0.118885, [3, -0.12, 0], [3, 0.0933333, 0]], [0.118885, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.118885, [3, -0.106667, 0], [3, 0.146667, 0]], [0.118885, [3, -0.146667, 0], [3, 0.2, 0]], [0.118885, [3, -0.2, 0], [3, 0.0666667, 0]], [0.0993094, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("RAnklePitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[0.09, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.09, [3, -0.0933333, 0], [3, 0.16, 0]], [0.09, [3, -0.16, 0], [3, 0.12, 0]], [0.09, [3, -0.12, 0], [3, 0.0933333, 0]], [0.09, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.09, [3, -0.106667, 0], [3, 0.146667, 0]], [0.09, [3, -0.146667, 0], [3, 0.2, 0]], [0.09, [3, -0.2, 0], [3, 0.0666667, 0]], [0.09, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("RAnkleRoll")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.13, [3, -0.0933333, 0], [3, 0.16, 0]], [0.13, [3, -0.16, 0], [3, 0.12, 0]], [0.13, [3, -0.12, 0], [3, 0.0933333, 0]], [0.13, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.13, [3, -0.106667, 0], [3, 0.146667, 0]], [0.13, [3, -0.146667, 0], [3, 0.2, 0]], [0.13, [3, -0.2, 0], [3, 0.0666667, 0]], [0.13, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0.430973, [3, -0.0133333, 0], [3, 0.0933333, 0]], [1.29884, [3, -0.0933333, 0], [3, 0.16, 0]], [1.17515, [3, -0.16, 8.8772e-07], [3, 0.12, -6.6579e-07]], [1.17515, [3, -0.12, 0], [3, 0.0933333, 0]], [1.17515, [3, -0.0933333, 0], [3, 0.106667, 0]], [1.17515, [3, -0.106667, 0], [3, 0.146667, 0]], [1.17515, [3, -0.146667, 0], [3, 0.2, 0]], [1.17515, [3, -0.2, 0], [3, 0.0666667, 0]], [0.430973, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[1.213, [3, -0.0133333, 0], [3, 0.0933333, 0]], [1.38651, [3, -0.0933333, 0], [3, 0.16, 0]], [1.38563, [3, -0.16, 0], [3, 0.12, 0]], [1.38563, [3, -0.12, 0], [3, 0.0933333, 0]], [1.38563, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.214676, [3, -0.106667, 0], [3, 0.146667, 0]], [0.214676, [3, -0.146667, 0], [3, 0.2, 0]], [0.214676, [3, -0.2, 0], [3, 0.0666667, 0]], [1.213, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0.3, [3, -0.0133333, 0], [3, 0.0933333, 0]], [1, [3, -0.0933333, -0.0408333], [3, 0.16, 0.07]], [1, [3, -0.16, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.0933333, 0]], [0, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.09, [3, -0.106667, -0.0631579], [3, 0.146667, 0.0868421]], [0.45, [3, -0.146667, 0], [3, 0.2, 0]], [0.45, [3, -0.2, 0], [3, 0.0666667, 0]], [0.3, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("RHipPitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.0933333, 0]], [0.13, [3, -0.0933333, 0], [3, 0.16, 0]], [0.13, [3, -0.16, 0], [3, 0.12, 0]], [0.13, [3, -0.12, 0], [3, 0.0933333, 0]], [0.13, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.13, [3, -0.106667, 0], [3, 0.146667, 0]], [0.13, [3, -0.146667, 0], [3, 0.2, 0]], [0.13, [3, -0.2, 0], [3, 0.0666667, 0]], [0.13, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("RHipRoll")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[-0.1, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.1, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.1, [3, -0.16, 0], [3, 0.12, 0]], [-0.1, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.1, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.1, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.1, [3, -0.146667, 0], [3, 0.2, 0]], [-0.1, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.1, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("RHipYawPitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[-0.17, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.17, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.17, [3, -0.16, 0], [3, 0.12, 0]], [-0.17, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.17, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.17, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.17, [3, -0.146667, 0], [3, 0.2, 0]], [-0.17, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.17, [3, -0.0666667, 0], [3, 0, 0]]])

# names.append("RKneePitch")
# times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
# keys.append([[-0.09, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.09, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.09, [3, -0.16, 0], [3, 0.12, 0]], [-0.09, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.09, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.09, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.09, [3, -0.146667, 0], [3, 0.2, 0]], [-0.09, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[1.42331, [3, -0.0133333, 0], [3, 0.0933333, 0]], [1.09302, [3, -0.0933333, 0.0934826], [3, 0.16, -0.160256]], [0.657696, [3, -0.16, 4.4386e-07], [3, 0.12, -3.32895e-07]], [0.657696, [3, -0.12, 0], [3, 0.0933333, 0]], [0.657696, [3, -0.0933333, 0], [3, 0.106667, 0]], [0.762107, [3, -0.106667, 0], [3, 0.146667, 0]], [0.762107, [3, -0.146667, 0], [3, 0.2, 0]], [0.762107, [3, -0.2, 0], [3, 0.0666667, 0]], [1.42331, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[-0.245094, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.0334722, [3, -0.0933333, -0.0560173], [3, 0.16, 0.0960297]], [0.214224, [3, -0.16, 0], [3, 0.12, 0]], [0.214223, [3, -0.12, 0], [3, 0.0933333, 0]], [0.214223, [3, -0.0933333, 0], [3, 0.106667, 0]], [-0.0340945, [3, -0.106667, 0], [3, 0.146667, 0]], [-0.0340945, [3, -0.146667, 0], [3, 0.2, 0]], [-0.0340945, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.245094, [3, -0.0666667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.04, 0.32, 0.8, 1.16, 1.44, 1.76, 2.2, 2.8, 3])
keys.append([[0.10819, [3, -0.0133333, 0], [3, 0.0933333, 0]], [-0.460767, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.458197, [3, -0.16, -1.10965e-06], [3, 0.12, 8.32238e-07]], [-0.458196, [3, -0.12, 0], [3, 0.0933333, 0]], [-0.458196, [3, -0.0933333, 0], [3, 0.106667, 0]], [1.14145, [3, -0.106667, 0], [3, 0.146667, 0]], [1.14145, [3, -0.146667, 0], [3, 0.2, 0]], [1.14145, [3, -0.2, 0], [3, 0.0666667, 0]], [0.10819, [3, -0.0666667, 0], [3, 0, 0]]])

