# Choregraphe bezier export in Python.
# LOOK AROUND or CONFUSED or EYE-SEARCHING 
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[-0.00430945, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.0820305, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.101229, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.0767945, [3, -0.306667, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.654498, [3, -0.0666667, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0.174533], [3, 0.306667, -0.16057]], [-0.350811, [3, -0.306667, 0], [3, 0.28, 0]], [0, [3, -0.28, 0], [3, 0, 0]]])

# names.append("LAnklePitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[0.09, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.09, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.09, [3, -0.333333, 0], [3, 0.306667, 0]], [0.09, [3, -0.306667, 0], [3, 0.28, 0]], [0.09, [3, -0.28, 0], [3, 0, 0]]])

# names.append("LAnkleRoll")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[-0.13, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.13, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.13, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.13, [3, -0.306667, 0], [3, 0.28, 0]], [-0.13, [3, -0.28, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[-0.421502, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.728806, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.421502, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.421502, [3, -0.306667, 0], [3, 0.28, 0]], [-0.421502, [3, -0.28, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[-1.21118, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.527007, [3, -0.0666667, 0], [3, 0.333333, 0]], [-1.21118, [3, -0.333333, 0], [3, 0.306667, 0]], [-1.21118, [3, -0.306667, 0], [3, 0.28, 0]], [-1.21118, [3, -0.28, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0.3, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.00097775, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.3, [3, -0.333333, 0], [3, 0.306667, 0]], [0.3, [3, -0.306667, 0], [3, 0.28, 0]], [0.3, [3, -0.28, 0], [3, 0, 0]]])

# names.append("LHipPitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.13, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.306667, 0]], [0.13, [3, -0.306667, 0], [3, 0.28, 0]], [0.13, [3, -0.28, 0], [3, 0, 0]]])

# names.append("LHipRoll")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[0.1, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.1, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.1, [3, -0.333333, 0], [3, 0.306667, 0]], [0.1, [3, -0.306667, 0], [3, 0.28, 0]], [0.1, [3, -0.28, 0], [3, 0, 0]]])

# names.append("LHipYawPitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[-0.17, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.17, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.17, [3, -0.306667, 0], [3, 0.28, 0]], [-0.17, [3, -0.28, 0], [3, 0, 0]]])

# names.append("LKneePitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[-0.09, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.09, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.09, [3, -0.306667, 0], [3, 0.28, 0]], [-0.09, [3, -0.28, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[1.41789, [3, -0.0133333, 0], [3, 0.0666667, 0]], [1.34828, [3, -0.0666667, 0], [3, 0.333333, 0]], [1.41789, [3, -0.333333, -7.23685e-07], [3, 0.306667, 6.6579e-07]], [1.41789, [3, -0.306667, 0], [3, 0.28, 0]], [1.41789, [3, -0.28, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0.246231, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.246088, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.246231, [3, -0.333333, -1.80921e-08], [3, 0.306667, 1.66448e-08]], [0.246231, [3, -0.306667, 0], [3, 0.28, 0]], [0.246231, [3, -0.28, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0.0993094, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.16892, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.0993094, [3, -0.333333, -4.52303e-08], [3, 0.306667, 4.16119e-08]], [0.0993094, [3, -0.306667, 0], [3, 0.28, 0]], [0.0993094, [3, -0.28, 0], [3, 0, 0]]])

# names.append("RAnklePitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[0.09, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.09, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.09, [3, -0.333333, 0], [3, 0.306667, 0]], [0.09, [3, -0.306667, 0], [3, 0.28, 0]], [0.09, [3, -0.28, 0], [3, 0, 0]]])

# names.append("RAnkleRoll")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.13, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.306667, 0]], [0.13, [3, -0.306667, 0], [3, 0.28, 0]], [0.13, [3, -0.28, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0.430973, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.706246, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.430973, [3, -0.333333, 9.40791e-07], [3, 0.306667, -8.65527e-07]], [0.430972, [3, -0.306667, 0], [3, 0.28, 0]], [0.430972, [3, -0.28, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[1.213, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.413512, [3, -0.0666667, 0], [3, 0.333333, 0]], [1.213, [3, -0.333333, 0], [3, 0.306667, 0]], [1.213, [3, -0.306667, 0], [3, 0.28, 0]], [1.213, [3, -0.28, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0.3, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.00097775, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.3, [3, -0.333333, 0], [3, 0.306667, 0]], [0.3, [3, -0.306667, 0], [3, 0.28, 0]], [0.3, [3, -0.28, 0], [3, 0, 0]]])

# names.append("RHipPitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[0.13, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.13, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.13, [3, -0.333333, 0], [3, 0.306667, 0]], [0.13, [3, -0.306667, 0], [3, 0.28, 0]], [0.13, [3, -0.28, 0], [3, 0, 0]]])

# names.append("RHipRoll")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[-0.1, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.1, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.1, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.1, [3, -0.306667, 0], [3, 0.28, 0]], [-0.1, [3, -0.28, 0], [3, 0, 0]]])

# names.append("RHipYawPitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[-0.17, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.17, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.17, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.17, [3, -0.306667, 0], [3, 0.28, 0]], [-0.17, [3, -0.28, 0], [3, 0, 0]]])

# names.append("RKneePitch")
# times.append([0.04, 0.24, 1.24, 2.16, 3])
# keys.append([[-0.09, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.09, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.09, [3, -0.306667, 0], [3, 0.28, 0]], [-0.09, [3, -0.28, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[1.42331, [3, -0.0133333, 0], [3, 0.0666667, 0]], [1.33017, [3, -0.0666667, 0], [3, 0.333333, 0]], [1.42331, [3, -0.333333, 0], [3, 0.306667, 0]], [1.42331, [3, -0.306667, 0], [3, 0.28, 0]], [1.42331, [3, -0.28, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[-0.245094, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.237195, [3, -0.0666667, 0], [3, 0.333333, 0]], [-0.245094, [3, -0.333333, 9.40791e-07], [3, 0.306667, -8.65527e-07]], [-0.245095, [3, -0.306667, 0], [3, 0.28, 0]], [-0.245095, [3, -0.28, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0.04, 0.24, 1.24, 2.16, 3])
keys.append([[0.10819, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.316689, [3, -0.0666667, 0], [3, 0.333333, 0]], [0.10819, [3, -0.333333, 0], [3, 0.306667, 0]], [0.10819, [3, -0.306667, 0], [3, 0.28, 0]], [0.10819, [3, -0.28, 0], [3, 0, 0]]])
